name: Assign selected assignees
on:
  issues:
    types: [opened, edited]

jobs:
  assign:
    permissions:
      issues: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Parse "Исполнители" and assign
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const issue = context.payload.issue;
            const body  = issue.body || "";

            const people = JSON.parse(fs.readFileSync('.github/ISSUE_TEMPLATE_SRC/data/assignees.json', 'utf8'));
            const labelFor = (p) => `@${p.login} + ', ' + ${p.name}${p.role ? ', ' + p.role : ''}`;
            const dict = new Map(people.map(p => [labelFor(p), p.login]));

            const sec = body.match(/###\s*Исполнители[\s\S]*?(?=\n###\s|\n*$)/);
            if (!sec) { core.info("Нет секции 'Исполнители'"); return; }

            const pickedLabels = [...sec[0].matchAll(/-\s*\[x\]\s*(.+)\s*$/gm)].map(m => m[1].trim());

            const assignees = [];
            for (const lbl of pickedLabels) {
              if (dict.has(lbl)) { assignees.push(dict.get(lbl)); continue; }
              const m = lbl.match(/@([A-Za-z0-9-]+)/);
              if (m) assignees.push(m[1]);
            }

            const unique = [...new Set(assignees)].slice(0, 10);
            if (!unique.length) { core.info("Нечего назначать"); return; }

            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              assignees: unique
            });

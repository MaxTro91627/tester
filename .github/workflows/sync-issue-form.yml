name: Sync issue form from JSON
on:
  push:
    paths:
      - 'data/assignees.json'
      - '.github/ISSUE_TEMPLATE_SRC/project_task.template.yml'
  workflow_dispatch:

jobs:
  build-form:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Generate .github/ISSUE_TEMPLATE/project_task.yml
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            const jsonPath = path.join(process.cwd(), 'data/assignees.json');
            const tplPath  = path.join(process.cwd(), '.github/ISSUE_TEMPLATE_SRC/project_task.template.yml');
            const outPath  = path.join(process.cwd(), '.github/ISSUE_TEMPLATE/project_task.yml');


            const people = JSON.parse(fs.readFileSync(jsonPath, 'utf8'));
            if (!Array.isArray(people)) {
              core.setFailed('data/assignees.json должен быть массивом объектов');
              return;
            }

            // сортируем по имени, дальше по логину
            people.sort((a,b)=> (a.name || a.login).localeCompare(b.name || b.login, 'ru'));

            const labelFor = (p) => `"@${p.login}, ${p.name}${p.role ? ', ' + p.role : ''}"`;
            const options = people.map(p => `        - ${labelFor(p)}`).join('\n');

            let template = fs.readFileSync(tplPath, 'utf8');
            if (!template.includes('{{ASSIGNEE_OPTIONS}}')) {
              core.setFailed('В template.yml не найден плейсхолдер {{ASSIGNEE_OPTIONS}}');
              return;
            }

            const banner = '# ⚠️ AUTO-GENERATED FROM project_task.template.yml + data/assignees.json — НЕ РЕДАКТИРОВАТЬ РУКАМИ\n';
            const result = banner + template.replace('# {{ASSIGNEE_OPTIONS}}', options);

            fs.writeFileSync(outPath, result, 'utf8');
            core.info('project_task.yml сгенерирован');

      - name: Commit changes if any
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: sync issue form from assignees.json"
          file_pattern: ".github/ISSUE_TEMPLATE/project_task.yml"
